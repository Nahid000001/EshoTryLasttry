# Generated by Django 4.2.7 on 2025-08-17 14:17

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        ('products', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other'), ('P', 'Prefer not to say')], max_length=1, null=True)),
                ('height', models.IntegerField(blank=True, help_text='Height in centimeters', null=True, validators=[django.core.validators.MinValueValidator(100), django.core.validators.MaxValueValidator(250)])),
                ('weight', models.IntegerField(blank=True, help_text='Weight in kilograms', null=True, validators=[django.core.validators.MinValueValidator(30), django.core.validators.MaxValueValidator(300)])),
                ('body_type', models.CharField(blank=True, choices=[('slim', 'Slim'), ('athletic', 'Athletic'), ('regular', 'Regular'), ('plus', 'Plus Size')], max_length=20, null=True)),
                ('preferred_colors', models.JSONField(blank=True, default=list)),
                ('preferred_styles', models.JSONField(blank=True, default=list)),
                ('size_preferences', models.JSONField(blank=True, default=dict)),
                ('email_notifications', models.BooleanField(default=True)),
                ('marketing_notifications', models.BooleanField(default=False)),
                ('data_sharing_consent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_active', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('preferred_brands', models.ManyToManyField(blank=True, to='products.brand')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserStyleQuiz',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('preferred_styles', models.JSONField(default=list)),
                ('color_preferences', models.JSONField(default=list)),
                ('fit_preferences', models.JSONField(default=list)),
                ('occasion_preferences', models.JSONField(default=list)),
                ('brand_preferences', models.JSONField(default=list)),
                ('price_range', models.JSONField(default=dict)),
                ('lifestyle', models.CharField(blank=True, max_length=50)),
                ('shopping_frequency', models.CharField(blank=True, max_length=50)),
                ('inspiration_sources', models.JSONField(default=list)),
                ('completed_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='style_quiz', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Style Quiz',
                'verbose_name_plural': 'User Style Quizzes',
                'db_table': 'user_style_quiz',
            },
        ),
        migrations.CreateModel(
            name='UserAvatar',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('avatar_data', models.JSONField()),
                ('measurements', models.JSONField()),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avatars', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Avatar',
                'verbose_name_plural': 'User Avatars',
                'db_table': 'user_avatars',
                'indexes': [models.Index(fields=['user', 'is_default'], name='user_avatar_user_id_66469e_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserAddress',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('type', models.CharField(choices=[('home', 'Home'), ('work', 'Work'), ('other', 'Other')], default='home', max_length=10)),
                ('is_default', models.BooleanField(default=False)),
                ('full_name', models.CharField(max_length=255)),
                ('company', models.CharField(blank=True, max_length=255)),
                ('address_line_1', models.CharField(max_length=255)),
                ('address_line_2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('state', models.CharField(max_length=100)),
                ('postal_code', models.CharField(max_length=20)),
                ('country', models.CharField(max_length=100)),
                ('phone_number', models.CharField(blank=True, max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Address',
                'verbose_name_plural': 'User Addresses',
                'db_table': 'user_addresses',
                'indexes': [models.Index(fields=['user', 'is_default'], name='user_addres_user_id_35ed52_idx'), models.Index(fields=['user', 'type'], name='user_addres_user_id_ada0c3_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_email_4b85f2_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['created_at'], name='users_created_6541e9_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['last_active'], name='users_last_ac_323696_idx'),
        ),
    ]
